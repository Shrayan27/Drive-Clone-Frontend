"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./src/hooks/useFiles.ts":
/*!*******************************!*\
  !*** ./src/hooks/useFiles.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useFiles: function() { return /* binding */ useFiles; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n/* harmony import */ var _useAuth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useAuth */ \"(app-pages-browser)/./src/hooks/useAuth.ts\");\n\n\n\nfunction useFiles() {\n    const { user } = (0,_useAuth__WEBPACK_IMPORTED_MODULE_2__.useAuth)();\n    const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [recentFiles, setRecentFiles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [uploading, setUploading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [searchQuery, setSearchQuery] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    // Load user's files from Supabase\n    const loadFiles = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!user) return;\n        try {\n            setLoading(true);\n            // Get files from Supabase storage using authenticated client\n            const { data: storageFiles, error: storageError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.storage.from(_lib_supabase__WEBPACK_IMPORTED_MODULE_1__.STORAGE_BUCKET).list(\"users/\".concat(user.id), {\n                limit: 100,\n                offset: 0\n            });\n            if (storageError) {\n                console.error(\"Error loading files from storage:\", storageError);\n                return;\n            }\n            // Get file metadata from storage\n            const fileList = storageFiles.filter((file)=>file.name !== \".emptyFolderPlaceholder\").map((file)=>{\n                var _file_metadata, _file_metadata1;\n                return {\n                    id: file.id || file.name,\n                    name: file.name,\n                    size: ((_file_metadata = file.metadata) === null || _file_metadata === void 0 ? void 0 : _file_metadata.size) || 0,\n                    type: ((_file_metadata1 = file.metadata) === null || _file_metadata1 === void 0 ? void 0 : _file_metadata1.mimetype) || \"application/octet-stream\",\n                    url: \"\",\n                    path: \"users/\".concat(user.id, \"/\").concat(file.name),\n                    userId: user.id,\n                    createdAt: new Date(file.created_at || Date.now()),\n                    updatedAt: new Date(file.updated_at || Date.now())\n                };\n            });\n            setFiles(fileList);\n            setRecentFiles(fileList.slice(0, 10)); // Get 10 most recent files\n        } catch (error) {\n            console.error(\"Error loading files:\", error);\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        user\n    ]);\n    // Upload file to Supabase\n    const uploadFile = async function(file) {\n        let folderPath = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\";\n        if (!user) {\n            console.error(\"No user found for upload\");\n            throw new Error(\"User not authenticated\");\n        }\n        try {\n            setUploading(true);\n            // Debug: Check authentication status\n            console.log(\"User ID:\", user.id);\n            console.log(\"User email:\", user.email);\n            // Check if we have a valid session\n            const { data: { session } } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.auth.getSession();\n            console.log(\"Session exists:\", !!session);\n            console.log(\"Access token exists:\", !!(session === null || session === void 0 ? void 0 : session.access_token));\n            // Create unique filename\n            const fileName = \"\".concat(Date.now(), \"_\").concat(file.name);\n            const filePath = folderPath ? \"\".concat(folderPath, \"/\").concat(fileName) : \"users/\".concat(user.id, \"/\").concat(fileName);\n            console.log(\"Uploading to path:\", filePath);\n            // Upload to Supabase storage using authenticated client\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.storage.from(_lib_supabase__WEBPACK_IMPORTED_MODULE_1__.STORAGE_BUCKET).upload(filePath, file, {\n                cacheControl: \"3600\",\n                upsert: false\n            });\n            if (error) {\n                console.error(\"Supabase upload error:\", error);\n                console.error(\"Error details:\", {\n                    message: error.message,\n                    statusCode: error.statusCode,\n                    error: error.error\n                });\n                throw new Error(\"Upload failed: \".concat(error.message));\n            }\n            // Get public URL\n            const { data: urlData } = _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.storage.from(_lib_supabase__WEBPACK_IMPORTED_MODULE_1__.STORAGE_BUCKET).getPublicUrl(filePath);\n            // Reload files\n            await loadFiles();\n            return urlData.publicUrl;\n        } catch (error) {\n            console.error(\"Error uploading file:\", error);\n            throw error;\n        } finally{\n            setUploading(false);\n        }\n    };\n    // Delete file from Supabase\n    const deleteFile = async (fileId, filePath)=>{\n        if (!user) return;\n        try {\n            // Delete from Supabase storage using authenticated client\n            const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.storage.from(_lib_supabase__WEBPACK_IMPORTED_MODULE_1__.STORAGE_BUCKET).remove([\n                filePath\n            ]);\n            if (error) {\n                console.error(\"Delete error:\", error);\n                throw error;\n            }\n            // Reload files\n            await loadFiles();\n        } catch (error) {\n            console.error(\"Error deleting file:\", error);\n            throw error;\n        }\n    };\n    // Search files\n    const searchFiles = (query)=>{\n        setSearchQuery(query);\n        if (!query.trim()) {\n            return files;\n        }\n        return files.filter((file)=>file.name.toLowerCase().includes(query.toLowerCase()) || file.type.toLowerCase().includes(query.toLowerCase()));\n    };\n    // Load files on mount and when user changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (user) {\n            loadFiles();\n        }\n    }, [\n        user\n    ]);\n    return {\n        files,\n        recentFiles,\n        loading,\n        uploading,\n        searchQuery,\n        uploadFile,\n        deleteFile,\n        searchFiles,\n        loadFiles\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useFiles.ts\n"));

/***/ })

});